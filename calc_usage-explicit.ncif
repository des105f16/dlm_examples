principal u, ec;

typedef struct usage {
  int {{u->u}} start_time;
  int {{u->u}} usageWh;
} usage;

typedef struct price {
  int {{ec->u, ec}} start_time;
  int {{ec->u, ec}} priceEars;
} price;

int {{u->ec}} calc_usage(usage {{_}} *usages, int {{_}} usages_count, price {{_}} *prices, int {{_}} prices_count) {
  int {{u->; ec->}} result = 0;

  int {{u->; ec->}} i = 0;
  int {{u->; ec->}} j = 0;
  while (i < usages_count) {
  while ((j < prices_count-1) && (prices[j+1].start_time <= usages[i].start_time)) {
        j = j + 1;
    }
    result = result + usages[i].usageWh * prices[j].priceEars;
    i = i + 1;
  }

  this -->? u, ec {
    return <|result, {{u->ec}}|>;
  }
  return -1;
}
