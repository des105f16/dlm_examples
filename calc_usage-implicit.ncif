principal u, ec;

typedef struct usage {
  int {{u->u}} start_time;
  int {{u->u}} usageWh;
} usage;

typedef struct price {
  int {{ec->u, ec}} start_time;
  int {{ec->u, ec}} priceEars;
} price;

int {{usages; prices}} calc_usage(usage *usages, int {{_}} usages_count, price *prices, int {{_}} prices_count) {
  int result = 0;

  int i = 0;
  int j = 0;
  int j2 = 1;
  while (i < usages_count) {
    while (j < prices_count-1 && prices[j2].start_time <= usages[i].start_time) {
        j = j + 1;
        j2 = j2 + 1;
    }
    result = result + usages[i].usageWh * prices[j].priceEars;
    i = i + 1;
  }

  this ?> u, ec {
    return <|result|>;
  }
  return -1;
}
